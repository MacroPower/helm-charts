{{ if .Values.features.policies.enabled }}
{{- include "ocis.basicServiceTemplates" (dict "scope" . "appName" "appNamePolicies" "appNameSuffix" "") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .appName }}
  namespace: {{ template "ocis.namespace" . }}
  labels:
    {{- include "ocis.labels" . | nindent 4 }}
spec:
  {{- include "ocis.selector" . | nindent 2 }}
  {{- if and (not .Values.autoscaling.enabled) (.Values.replicas) }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  {{- include "ocis.deploymentStrategy" . | nindent 2 }}
  template:
    {{- include "ocis.templateMetadata" (dict "scope" $ "configCheck" true) | nindent 4 }}
    spec:
      {{- include "ocis.affinity" .Values.services.policies | nindent 6 }}
      securityContext:
          fsGroup: {{ .Values.securityContext.fsGroup }}
          fsGroupChangePolicy: {{ .Values.securityContext.fsGroupChangePolicy }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- include "ocis.priorityClassName" $.priorityClassName | nindent 6 }}
      {{- include "ocis.hostAliases" $ | nindent 6 }}
      nodeSelector: {{ toYaml $.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .appName }}
          {{- include "ocis.image" $ | nindent 10 }}
          command: ["ocis"]
          args: ["policies", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            readOnlyRootFilesystem: true
          env:
            {{- include "ocis.serviceRegistry" . | nindent 12 }}
            {{- include "ocis.events" . | nindent 12 }}

            - name: POLICIES_LOG_COLOR
              value: {{ .Values.logging.color | quote }}
            - name: POLICIES_LOG_LEVEL
              value: {{ .Values.logging.level | quote }}
            - name: POLICIES_LOG_PRETTY
              value: {{ .Values.logging.pretty | quote }}
            - name: POLICIES_GRPC_ADDR
              value: 0.0.0.0:9125
            - name: POLICIES_ENGINE_TIMEOUT
              value: {{ .Values.features.policies.engineTimeout | quote }}
            # We currently don't support enforcing policies as a postprocessing step.
            # See https://github.com/owncloud/enterprise/issues/5919
            # - name: POLICIES_POSTPROCESSING_QUERY
            #   value: "data.postprocessing.granted"

            - name: POLICIES_DEBUG_PPROF
              value: {{ .Values.debug.profiling | quote }}

            - name: POLICIES_DEBUG_ADDR
              value: 0.0.0.0:9129

          {{- include "ocis.livenessProbe" . | nindent 10 }}

          resources: {{ toYaml .resources | nindent 12 }}

          ports:
            - name: grpc
              containerPort: 9125
            - name: metrics-debug
              containerPort: 9129

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: configs
              mountPath: /etc/ocis


      {{- include "ocis.imagePullSecrets" $ | nindent 6 }}
      volumes:
        - name: messaging-system-ca
          {{ if and (.Values.messagingSystem.external.enabled) (not .Values.messagingSystem.external.tls.certTrusted) }}
          secret:
            secretName: {{ include "secrets.messagingSystemCASecret" . }}
          {{ else }}
          emptyDir: {}
          {{ end }}
        - name: configs
          configMap:
            name: {{ .appName }}-config
{{ end }}
