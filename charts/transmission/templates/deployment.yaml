apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "transmission.fullname" . }}
  labels:
    {{- include "transmission.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "transmission.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "transmission.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "transmission.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-config
          securityContext:
            {{- toYaml .Values.init.securityContext | nindent 12 }}
          image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          command: ["sh", "/scripts/init.sh"]
          resources:
            {{- .Values.init.resources | toYaml | nindent 12 }}
          volumeMounts:
            - name: init
              mountPath: /scripts
            - name: config-file
              mountPath: /tmp/settings.json
              subPath: settings.json
            - mountPath: /config
              name: data
              subPath: config
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "{{ .Values.process.uid }}"
            - name: PGID
              value: "{{ .Values.process.gid }}"
          ports:
            - name: web
              containerPort: 9091
              protocol: TCP
            - name: peer-tcp
              containerPort: {{ .Values.service.peer.ports.tcp }}
              protocol: TCP
            - name: peer-udp
              containerPort: {{ .Values.service.peer.ports.udp }}
              protocol: UDP
          livenessProbe:
            tcpSocket:
              port: 9091
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9091
            initialDelaySeconds: 5
            periodSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: data
              subPath: config
            - mountPath: /watch
              name: data
              subPath: watch
            - mountPath: /downloads
              name: data
              subPath: downloads
      {{- if .Values.flood.enabled }}
        - name: flood
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.flood.image.repository }}:{{ .Values.flood.image.tag }}"
          imagePullPolicy: {{ .Values.flood.image.pullPolicy }}
          command: [
            "/sbin/tini", "--", "flood",
            "--port", "3001",
            "--allowedpath", "/downloads",
            "--auth", "none",
            "--trurl", "http://localhost:9091/transmission/rpc",
            "--truser", "transmission",
            "--trpass", "${TRANSMISSION_RPC_PASS}"
          ]
          env:
            - name: PUID
              value: "{{ .Values.process.uid }}"
            - name: PGID
              value: "{{ .Values.process.gid }}"
            - name: HOME
              value: /config
            - name: TRANSMISSION_RPC_PASS
              {{- if .Values.flood.rpcPass.valueFrom }}
              valueFrom:
                {{- toYaml .Values.flood.rpcPass.valueFrom | nindent 16 }}
              {{- else if .Values.flood.rpcPass.value }}
              value: "{{ .value }}"
              {{- end }}
          ports:
            - name: flood
              containerPort: 3001
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 2
          resources:
            {{- toYaml .Values.flood.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: data
              subPath: config
            - mountPath: /watch
              name: data
              subPath: watch
            - mountPath: /downloads
              name: data
              subPath: downloads
      {{- end }}
      volumes:
        - name: config-file
          secret:
            secretName: {{ .Values.configSecretName }}
            optional: false
        - name: init
          configMap:
            name: {{ include "transmission.fullname" . }}-init
            optional: false
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-%s" (include "transmission.fullname" .) "data") }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
