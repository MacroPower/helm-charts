apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "transmission.fullname" . }}
  labels:
    {{- include "transmission.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "transmission.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "transmission.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "transmission.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "{{ .Values.process.uid }}"
            - name: PGID
              value: "{{ .Values.process.gid }}"
          ports:
            - name: web
              containerPort: 9091
              protocol: TCP
            - name: peer-tcp
              containerPort: 51413
              protocol: TCP
            - name: peer-udp
              containerPort: 51413
              protocol: UDP
          livenessProbe:
            tcpSocket:
              port: 9091
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9091
            initialDelaySeconds: 5
            periodSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: config
              subPath: config
            - mountPath: /watch
              name: watch
              subPath: watch
            - mountPath: /downloads
              name: downloads
              subPath: downloads
      volumes:
        - name: config
        {{- if .Values.persistence.config.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim | default (printf "%s-%s" (include "transmission.fullname" .) "config") }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: downloads
        {{- if .Values.persistence.downloads.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.downloads.existingClaim | default (printf "%s-%s" (include "transmission.fullname" .) "downloads") }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: watch
        {{- if .Values.persistence.watch.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.watch.existingClaim | default (printf "%s-%s" (include "transmission.fullname" .) "watch") }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
