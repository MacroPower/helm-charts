{{- if and .Values.postgres.enabled .Values.keycloak.internal.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opencloud.postgres.fullname" . }}
  labels:
    {{- include "opencloud.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "opencloud.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "opencloud.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      securityContext:
        fsGroup: 999  # Default PostgreSQL group ID
      containers:
        - name: postgres
          image: {{ include "opencloud.image" (dict "imageValues" .Values.postgres.image "global" .Values.global) | quote }}
          imagePullPolicy: {{ include "opencloud.image.pullPolicy" (dict "pullPolicy" .Values.postgres.image.pullPolicy "global" .Values.global) }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{- if .Values.postgres.existingSecret }}
                          {{ .Values.postgres.existingSecret }}
                        {{- else }}
                          {{ include "opencloud.postgres.fullname" . }}
                        {{- end }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{- if .Values.postgres.existingSecret }}
                          {{ .Values.postgres.existingSecret }}
                        {{- else }}
                          {{ include "opencloud.postgres.fullname" . }}
                        {{- end }}
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - name: postgres
              containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
      volumes:
        - name: data
          {{- if .Values.postgres.persistence.enabled }}
          persistentVolumeClaim:
            {{- if .Values.postgres.persistence.existingClaim }}
            claimName: {{ .Values.postgres.persistence.existingClaim | quote }}
            {{- else }}
            claimName: {{ include "opencloud.postgres.fullname" . }}-data
            {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}
