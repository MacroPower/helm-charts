{{- if and .Values.ingress.enabled .Values.onlyoffice.enabled }}
# toYaml and manually added key: value pairs cannot be used in the same annotations block,
# so we use a dict to build all annotations and pass them through toYaml once:
{{- $annotations := dict }}
{{- $_ := mergeOverwrite $annotations .Values.ingress.annotations }}
{{- if eq .Values.ingress.annotationsPreset "traefik" }}
  # Traefik: attach our pre-defined Middleware
  {{- $_ := set $annotations "traefik.ingress.kubernetes.io/router.middlewares" (printf "%s-add-x-forwarded-proto-https@kubernetescrd" .Release.Namespace) }}
{{- else if eq .Values.ingress.annotationsPreset "nginx" }}
  # NGINX: inject custom header via configuration-snippet
  {{- $_ := set $annotations "nginx.ingress.kubernetes.io/configuration-snippet" "more_set_headers \"X-Forwarded-Proto: https\";" }}
{{- else if eq .Values.ingress.annotationsPreset "nginx-no-snippets" }}
  # NGINX without snippets: use built-in forwarded headers support
  {{- $_ := set $annotations "nginx.ingress.kubernetes.io/use-forwarded-headers" "true" }}
  {{- $_ := set $annotations "nginx.ingress.kubernetes.io/forwarded-for-header" "X-Forwarded-For" }}
{{- else if eq .Values.ingress.annotationsPreset "haproxy" }}
  # HAProxy: inject custom header via request-set-headers
  {{- $_ := set $annotations "haproxy.ingress.kubernetes.io/request-set-headers" "X-Forwarded-Proto https" }}
{{- else if eq .Values.ingress.annotationsPreset "contour" }}
  # Contour: inject custom header via request-add
  {{- $_ := set $annotations "projectcontour.io/request-add" "X-Forwarded-Proto: https" }}
{{- else if eq .Values.ingress.annotationsPreset "istio" }}
  # Istio: inject custom header via EnvoyFilter
  {{- $_ := set $annotations "istio.io/request-headers" "X-Forwarded-Proto: https" }}
{{- end }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "opencloud.fullname" . }}-onlyoffice
  annotations:
    {{- toYaml $annotations | nindent 4 }}
spec:
  {{- if .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
  {{- if .Values.global.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.global.domain.onlyoffice | quote }}
      secretName: {{ .Values.global.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.global.domain.onlyoffice | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "opencloud.fullname" . }}-onlyoffice
                port:
                  number: 80
{{- end }}
