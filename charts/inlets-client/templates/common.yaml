---
{{- include "bjw-s.common.loader.init" . }}

{{- define "template.hardcodedValues" -}}
# Set the nameOverride based on the release name if no override has been set
{{ if not .Values.global.nameOverride }}
global:
  nameOverride: "{{ .Release.Name }}"
{{ end }}

{{ if not .Values.args }}
args:
  - client
  {{ if .Values.inlets.url }}
  - "--url={{ .Values.inlets.url }}"
  {{ end }}
  {{ if eq .Values.inlets.disableTransportWrapping false }}
  - "--strict-forwarding=false"
  {{ end }}
  {{ if .Values.inlets.tokenSecretName }}
  - "--token-from=/etc/inlets/{{ .Values.inlets.tokenSecretKey }}"
  {{ end }}
  {{ $upstreams := list }}
  {{ range $value := .Values.inlets.upstreams }}
    {{ if $value.match }}
      {{ $upstreams = append $upstreams (printf "%s=%s" $value.match $value.target) }}
    {{ else }}
      {{ $upstreams = append $upstreams $value.target }}
    {{ end }}
  {{ end }}
  {{ if $upstreams }}
  - "--upstream={{ join "," $upstreams }}"
  {{ end }}
{{ end }}

{{ if .Values.inlets.tokenSecretName }}
persistence:
  config:
    enabled: true
    name: {{ .Values.inlets.tokenSecretName }}
    type: secret
    mountPath: /etc/inlets
    readOnly: true
{{ end }}

{{- end -}}
{{- $_ := mergeOverwrite .Values (include "template.hardcodedValues" . | fromYaml) -}}

{{/* Render the templates */}}
{{ include "bjw-s.common.loader.generate" . }}
